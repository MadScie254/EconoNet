name: Streamlit Import Check

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  streamlit-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-streamlit-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-streamlit-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        # Install optional dependencies for full functionality
        pip install feedparser textblob nltk || echo "Optional dependencies not available"
        
    - name: Download NLTK data
      run: |
        python -c "
        try:
            import nltk
            nltk.download('punkt', quiet=True)
            nltk.download('vader_lexicon', quiet=True)
            print('✅ NLTK data downloaded')
        except:
            print('⚠️ NLTK data download failed, continuing...')
        "
        
    - name: Check dashboard imports
      run: |
        # Test import of main dashboards
        python -c "
        import sys
        sys.path.append('src')
        
        # Test core package import
        try:
            import econonet
            print('✅ EconoNet package imports successfully')
        except ImportError as e:
            print(f'❌ EconoNet import failed: {e}')
            sys.exit(1)
            
        # Test configuration
        try:
            from econonet import get_config, OperationMode, set_mode
            config = get_config()
            set_mode(OperationMode.OFFLINE)
            print('✅ Configuration system works')
        except Exception as e:
            print(f'❌ Configuration failed: {e}')
            sys.exit(1)
            
        # Test API functions
        try:
            from econonet import get_worldbank, get_coingecko
            print('✅ API functions import successfully')
        except ImportError as e:
            print(f'❌ API functions import failed: {e}')
            sys.exit(1)
            
        # Test visual components
        try:
            from econonet.visual import create_sentiment_radar, create_provenance_footer
            print('✅ Visual components import successfully') 
        except ImportError as e:
            print(f'❌ Visual components import failed: {e}')
            sys.exit(1)
            
        # Test news module (optional)
        try:
            from econonet.live_news import get_fintech_news, analyze_sentiment
            print('✅ News module imports successfully')
        except ImportError as e:
            print(f'⚠️ News module import warning (optional): {e}')
        "
        
    - name: Test dashboard file syntax
      run: |
        # Check if dashboard files have valid Python syntax
        python -m py_compile ultra_dashboard_enhanced.py
        echo "✅ ultra_dashboard_enhanced.py syntax OK"
        
        # Test other dashboard files if they exist
        if [ -f "immersive_dashboard.py" ]; then
            python -m py_compile immersive_dashboard.py
            echo "✅ immersive_dashboard.py syntax OK"
        fi
        
        if [ -f "enhanced_streamlit_app.py" ]; then
            python -m py_compile enhanced_streamlit_app.py  
            echo "✅ enhanced_streamlit_app.py syntax OK"
        fi
        
    - name: Test streamlit dry run
      run: |
        # Test streamlit config check without starting server
        timeout 30s streamlit run ultra_dashboard_enhanced.py --server.headless true --server.port 8501 --server.runOnSave false &
        sleep 5
        curl -f http://localhost:8501/_stcore/health || echo "Dashboard health check completed"
        pkill -f streamlit || echo "Streamlit process cleanup completed"
        echo "✅ Streamlit dry run completed"
