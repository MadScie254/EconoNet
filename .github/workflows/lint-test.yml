name: Lint and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r requirements-dev.txt
        
    - name: Install optional dependencies for testing
      run: |
        pip install feedparser textblob nltk || echo "Optional dependencies not available"
        python -c "import nltk; nltk.download('punkt'); nltk.download('vader_lexicon')" || echo "NLTK data download failed"
        
    - name: Lint with ruff
      run: |
        ruff check src/ tests/ --ignore=E501,W503
        
    - name: Format check with black
      run: |
        black --check src/ tests/ --line-length=120
        
    - name: Type check with mypy (continue on error)
      run: |
        mypy src/econonet --ignore-missing-imports || echo "Type checking completed with warnings"
        
    - name: Test with pytest
      run: |
        pytest tests/ --cov=src/econonet --cov-report=xml --cov-report=term -v
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false
        flags: unittests
        name: codecov-umbrella
