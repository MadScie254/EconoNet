name: Notebooks Smoke Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  notebook-test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install papermill nbconvert jupyter
        
    - name: Set environment to offline mode
      run: |
        echo "ECONET_MODE=offline" >> $GITHUB_ENV
        
    - name: Execute notebook smoke test
      run: |
        # Create a minimal test notebook
        cat > test_notebook.ipynb << 'EOF'
        {
         "cells": [
          {
           "cell_type": "code",
           "execution_count": null,
           "metadata": {},
           "outputs": [],
           "source": [
            "import sys\n",
            "sys.path.append('src')\n",
            "from econonet import get_worldbank, set_mode, OperationMode\n",
            "set_mode(OperationMode.OFFLINE)\n",
            "data = get_worldbank('KE', 'NY.GDP.MKTP.CD')\n",
            "print(f'Synthetic data points: {len(data)}')\n",
            "assert len(data) > 0\n",
            "print('✅ Notebook integration test passed!')"
           ]
          }
         ],
         "metadata": {
          "kernelspec": {
           "display_name": "Python 3",
           "language": "python",
           "name": "python3"
          }
         },
         "nbformat": 4,
         "nbformat_minor": 4
        }
        EOF
        
    - name: Run notebook with papermill
      run: |
        papermill test_notebook.ipynb output_notebook.ipynb
        
    - name: Check execution results
      run: |
        # Verify the notebook executed successfully
        python -c "
        import json
        with open('output_notebook.ipynb', 'r') as f:
            notebook = json.load(f)
        
        # Check if cells executed
        executed_cells = 0
        for cell in notebook['cells']:
            if cell.get('execution_count') is not None:
                executed_cells += 1
        
        print(f'Executed cells: {executed_cells}')
        assert executed_cells > 0, 'No cells were executed'
        print('✅ Notebook smoke test completed successfully!')
        "
